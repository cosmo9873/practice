{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fswiss\fcharset0 Helvetica-Oblique;
\f3\fswiss\fcharset0 Helvetica;\f4\fswiss\fcharset0 Helvetica-Bold;\f5\fnil\fcharset0 Monaco;
\f6\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red21\green23\blue25;\red255\green255\blue255;\red52\green56\blue63;
\red78\green84\blue93;\red41\green67\blue135;\red22\green25\blue31;\red54\green59\blue74;\red210\green229\blue240;
\red76\green12\blue1;\red252\green244\blue202;\red0\green0\blue0;\red6\green50\blue15;\red152\green18\blue15;
\red0\green0\blue82;\red152\green46\blue3;\red0\green0\blue129;\red38\green38\blue38;\red228\green230\blue234;
\red98\green83\blue14;}
{\*\expandedcolortbl;;\cssrgb\c10980\c11765\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c26667\c28627\c31373;
\cssrgb\c37647\c40392\c43922;\cssrgb\c21176\c34510\c60000;\cssrgb\c11373\c12941\c16078;\cssrgb\c27451\c29804\c36078;\cssrgb\c85490\c91765\c95294;
\cssrgb\c37647\c7059\c0;\cssrgb\c99216\c96078\c83137;\cssrgb\c0\c0\c0;\cssrgb\c0\c25098\c7059;\cssrgb\c66667\c13333\c6667;
\cssrgb\c0\c3922\c39608;\cssrgb\c66667\c25098\c0;\cssrgb\c0\c7059\c58039;\cssrgb\c20000\c20000\c20000;\cssrgb\c91373\c92157\c93333;
\cssrgb\c46275\c39608\c6275;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl560\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Fibonacci\
\pard\pardeftab720\sl520\qc\partightenfactor0

\f1\i\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sl520\qc\partightenfactor0
\cf4 \strokec4 \
\pard\pardeftab720\sl520\qc\partightenfactor0

\f0\i0 \cf4 More Items\
\pard\pardeftab720\sl320\partightenfactor0

\f1\b0 \cf5 \strokec5 Owner:\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/profile/?id=627795569"}}{\fldrslt \cf6 \strokec6 Matthew Robertson}}\
\pard\pardeftab720\sl280\partightenfactor0

\f2\i \cf7 \strokec7 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\i0 \cf5 \strokec5 Easy\
\pard\pardeftab720\sl280\partightenfactor0

\f2\i \cf7 \strokec7 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\i0 \cf5 \strokec5 Ninja\
\pard\pardeftab720\sl280\partightenfactor0

\f2\i \cf7 \strokec7 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\i0 \cf5 \strokec5 Algorithm\
\pard\pardeftab720\sl560\partightenfactor0

\f0\b\fs48 \cf2 \strokec2 Description\
\pard\pardeftab720\sl280\partightenfactor0

\f3\b0\fs24 \cf7 \strokec7 Write a function that returns the nth term of the fibonacci sequence.\
\pard\pardeftab720\sl560\partightenfactor0

\f0\b\fs48 \cf2 \strokec2 Question Statement\
\pard\pardeftab720\sl280\partightenfactor0

\f4\fs24 \cf8 \cb9 \strokec8 NOTE:
\f3\b0 \cf7 \strokec7 \'a0This question OK for screens, but it's not recommended for use in onsite ninjas.\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf7 \cb1 Implement a function to output the nth value in the Fibonacci sequence where the first 7 values are:\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf10 \cb11 \strokec10 1\cf12 \strokec12 \
\cf10 \strokec10 1\cf12 \strokec12 \
\cf10 \strokec10 2\cf12 \strokec12 \
\cf10 \strokec10 3\cf12 \strokec12 \
\cf10 \strokec10 5\cf12 \strokec12 \
\cf10 \strokec10 8\cf12 \strokec12 \
\cf10 \strokec10 13\cf12 \strokec12 \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\fs24 \cf7 \cb1 \strokec7 Fibonacci is defined by the recurrence:\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf13 \cb11 \strokec13 Fib\cf14 \strokec14 (\cf10 \strokec10 0\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 1\cf12 \strokec12 \
\cf13 \strokec13 Fib\cf14 \strokec14 (\cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 1\cf12 \strokec12 \
\cf13 \strokec13 Fib\cf14 \strokec14 (\cf15 \strokec15 n\cf14 \strokec14 ,\cf12 \strokec12  \cf15 \strokec15 n\cf12 \strokec12  \cf14 \strokec14 >\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf13 \strokec13 Fib\cf14 \strokec14 (\cf15 \strokec15 n\cf12 \strokec12  \cf14 \strokec14 -\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 +\cf12 \strokec12  \cf13 \strokec13 Fib\cf14 \strokec14 (\cf15 \strokec15 n\cf12 \strokec12  \cf14 \strokec14 -\cf12 \strokec12  \cf10 \strokec10 2\cf14 \strokec14 )\cf12 \strokec12 \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\fs24 \cf7 \cb1 \strokec7 This is a good question because it's a conceptually simple problem, but it tests reasoning about space and time costs.\
Note that this question can be expressed efficiently either using an iteration or a recursion (see below).\
The recurrence definition lends itself to a tree-based solution. But if a candidate uses the naive tree solution, it will take exponential (golden ratio ^ n) time and linear (n) space. In fact, the algorithm can be implemented in any language in linear (n) time and constant (1) space.\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b \cf8 \cb9 \strokec8 NOTE:
\f3\b0 \cf7 \strokec7 \'a0this question should not mandate any particular implementation approach. It can be implemented efficiently using recursion or iteration. Asking a candidate to "implement this problem efficiently using recursion" is contrived. But if a candidate chooses a language like LISP and uses its recursive features, then they should know how to do that efficiently. A space-efficient recursion will need a helper function (you might have to give this as a hint).\
\pard\pardeftab720\sl540\sa160\partightenfactor0

\f4\b\fs36 \cf7 \cb1 Naive Solution\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=614872818684837#naive-solution"}}{\fldrslt \cf6 \strokec6 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf7 Here is a naive solution: but it takes linear space and exponential time. Terribly inefficient.\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf16 \cb11 \strokec16 function\cf12 \strokec12  \cf15 \strokec15 fib\cf14 \strokec14 (\cf17 \strokec17 $i\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
  \cf16 \strokec16 if\cf12 \strokec12  \cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 <=\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
    \cf16 \strokec16 return\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 ;\cf12 \strokec12 \
  \cf14 \strokec14 \}\cf12 \strokec12 \
  \cf16 \strokec16 return\cf12 \strokec12  \cf13 \strokec13 fib\cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 -\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 +\cf12 \strokec12  \cf13 \strokec13 fib\cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 -\cf12 \strokec12  \cf10 \strokec10 2\cf14 \strokec14 );\cf12 \strokec12 \
\pard\pardeftab720\sl280\partightenfactor0
\cf14 \strokec14 \}\cf12 \strokec12 \
\pard\pardeftab720\sl540\sa160\partightenfactor0

\f4\b\fs36 \cf7 \cb1 \strokec7 Time, but not space-efficient solutions\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=614872818684837#time-but-not-space-effic"}}{\fldrslt \cf6 \strokec6 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf7 The problems with the solution above are twofold:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 many nodes in the tree will be recomputed, and\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 linear (in the size of the value) space will be used at the peak of computation.\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf7 The tree is not a binary tree; it's a\'a0
\f2\i lattice
\f3\i0 . The children recombine. Therefore, treating the computation naively as a recursion tree will recompute values.\
It's possible to implement a solution that is time-efficient, avoiding these recomputations, but not space-efficient. For example:\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf16 \cb11 \strokec16 function\cf12 \strokec12  \cf15 \strokec15 fib\cf14 \strokec14 (\cf17 \strokec17 $n\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
  \cf17 \strokec17 $vals\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf16 \strokec16 array\cf14 \strokec14 ();\cf12 \strokec12 \
  \cf16 \strokec16 for\cf12 \strokec12  \cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 0\cf14 \strokec14 ;\cf12 \strokec12  \cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 <=\cf12 \strokec12  \cf17 \strokec17 $n\cf14 \strokec14 ;\cf12 \strokec12  \cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 ++)\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
    \cf16 \strokec16 if\cf12 \strokec12  \cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 ==\cf12 \strokec12  \cf10 \strokec10 0\cf12 \strokec12  \cf14 \strokec14 ||\cf12 \strokec12  \cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 ==\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
      \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $i\cf14 \strokec14 ]\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 ;\cf12 \strokec12 \
    \cf14 \strokec14 \}\cf12 \strokec12  \cf16 \strokec16 else\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
      \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $i\cf14 \strokec14 ]\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $i\cf14 \strokec14 -\cf10 \strokec10 1\cf14 \strokec14 ]\cf12 \strokec12  \cf14 \strokec14 +\cf12 \strokec12  \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $i\cf14 \strokec14 -\cf10 \strokec10 2\cf14 \strokec14 ];\cf12 \strokec12 \
    \cf14 \strokec14 \}\cf12 \strokec12 \
  \cf14 \strokec14 \}\cf12 \strokec12 \
  \cf16 \strokec16 return\cf12 \strokec12  \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $n\cf14 \strokec14 ];\cf12 \strokec12 \
\pard\pardeftab720\sl280\partightenfactor0
\cf14 \strokec14 \}\cf12 \strokec12 \
\pard\pardeftab720\sl540\sa160\partightenfactor0

\f4\b\fs36 \cf7 \cb1 \strokec7 Time and space efficient solutions\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=614872818684837#time-and-space-efficient"}}{\fldrslt \cf6 \strokec6 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf7 Ideally, one wants to avoid the redundant computations AND use constant space. It's possible and in any real language, even a functional one like LISP or ML that lack iterative loops.\
Can be written iteratively or recursively. If written recursively, the top-level interface function needs a recursive helper function.\
Only need to remember the past two values.\
Iteratively, in PHP:\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf16 \cb11 \strokec16 function\cf12 \strokec12  \cf15 \strokec15 fib\cf14 \strokec14 (\cf17 \strokec17 $i\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
  \cf16 \strokec16 if\cf12 \strokec12  \cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 <=\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
    \cf16 \strokec16 return\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 ;\cf12 \strokec12 \
  \cf14 \strokec14 \}\cf12 \strokec12 \
  \cf17 \strokec17 $prev\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 ;\cf12 \strokec12 \
  \cf17 \strokec17 $prevprev\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 ;\cf12 \strokec12 \
  \cf17 \strokec17 $res\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 2\cf14 \strokec14 ;\cf12 \strokec12 \
  \cf16 \strokec16 for\cf12 \strokec12  \cf14 \strokec14 (\cf17 \strokec17 $j\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 ;\cf12 \strokec12  \cf17 \strokec17 $j\cf12 \strokec12  \cf14 \strokec14 <\cf12 \strokec12  \cf17 \strokec17 $i\cf14 \strokec14 ;\cf12 \strokec12  \cf17 \strokec17 $j\cf14 \strokec14 ++)\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
    \cf17 \strokec17 $res\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf17 \strokec17 $prev\cf12 \strokec12  \cf14 \strokec14 +\cf12 \strokec12  \cf17 \strokec17 $prevprev\cf14 \strokec14 ;\cf12 \strokec12 \
    \cf17 \strokec17 $prevprev\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf17 \strokec17 $prev\cf14 \strokec14 ;\cf12 \strokec12 \
    \cf17 \strokec17 $prev\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf17 \strokec17 $res\cf14 \strokec14 ;\cf12 \strokec12 \
  \cf14 \strokec14 \}\cf12 \strokec12 \
  \cf16 \strokec16 return\cf12 \strokec12  \cf17 \strokec17 $res\cf14 \strokec14 ;\cf12 \strokec12 \
\pard\pardeftab720\sl280\partightenfactor0
\cf14 \strokec14 \}\cf12 \strokec12 \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\fs24 \cf7 \cb1 \strokec7 A simple trick that takes solutions like the that two above, but makes them space efficient. Notice the only difference is the additional %3.\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf16 \cb11 \strokec16 function\cf12 \strokec12  \cf15 \strokec15 fib\cf14 \strokec14 (\cf17 \strokec17 $n\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
  \cf17 \strokec17 $vals\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf16 \strokec16 array\cf14 \strokec14 ();\cf12 \strokec12 \
  \cf16 \strokec16 for\cf12 \strokec12  \cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 0\cf14 \strokec14 ;\cf12 \strokec12  \cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 <=\cf12 \strokec12  \cf17 \strokec17 $n\cf14 \strokec14 ;\cf12 \strokec12  \cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 ++)\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
    \cf16 \strokec16 if\cf12 \strokec12  \cf14 \strokec14 (\cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 ==\cf12 \strokec12  \cf10 \strokec10 0\cf12 \strokec12  \cf14 \strokec14 ||\cf12 \strokec12  \cf17 \strokec17 $i\cf12 \strokec12  \cf14 \strokec14 ==\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
      \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $i\cf14 \strokec14 %\cf10 \strokec10 3\cf14 \strokec14 ]\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf10 \strokec10 1\cf14 \strokec14 ;\cf12 \strokec12 \
    \cf14 \strokec14 \}\cf12 \strokec12  \cf16 \strokec16 else\cf12 \strokec12  \cf14 \strokec14 \{\cf12 \strokec12 \
      \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $i\cf14 \strokec14 %\cf10 \strokec10 3\cf14 \strokec14 ]\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf17 \strokec17 $vals\cf14 \strokec14 [(\cf17 \strokec17 $i\cf14 \strokec14 -\cf10 \strokec10 1\cf14 \strokec14 )%\cf10 \strokec10 3\cf14 \strokec14 ]\cf12 \strokec12  \cf14 \strokec14 +\cf12 \strokec12  \cf17 \strokec17 $vals\cf14 \strokec14 [(\cf17 \strokec17 $i\cf14 \strokec14 -\cf10 \strokec10 2\cf14 \strokec14 )%\cf10 \strokec10 3\cf14 \strokec14 ];\cf12 \strokec12 \
    \cf14 \strokec14 \}\cf12 \strokec12 \
  \cf14 \strokec14 \}\cf12 \strokec12 \
  \cf16 \strokec16 return\cf12 \strokec12  \cf17 \strokec17 $vals\cf14 \strokec14 [\cf17 \strokec17 $n\cf14 \strokec14 %\cf10 \strokec10 3\cf14 \strokec14 ];\cf12 \strokec12 \
\pard\pardeftab720\sl280\partightenfactor0
\cf14 \strokec14 \}\cf12 \strokec12 \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\fs24 \cf7 \cb1 \strokec7 Note that recursion can solve this problem efficiently as well. In OCaml:\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf15 \cb11 \strokec15 let\cf12 \strokec12  \cf15 \strokec15 fibonacci\cf12 \strokec12  \cf15 \strokec15 n\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12 \
  \cf15 \strokec15 let\cf12 \strokec12  \cf15 \strokec15 rec\cf12 \strokec12  \cf15 \strokec15 fib\cf12 \strokec12  \cf15 \strokec15 i\cf12 \strokec12  \cf15 \strokec15 j\cf12 \strokec12  \cf15 \strokec15 k\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12 \
    \cf16 \strokec16 if\cf12 \strokec12  \cf14 \strokec14 (\cf15 \strokec15 k\cf12 \strokec12  \cf14 \strokec14 =\cf12 \strokec12  \cf15 \strokec15 n\cf14 \strokec14 )\cf12 \strokec12  \cf15 \strokec15 then\cf12 \strokec12  \cf15 \strokec15 i\cf12 \strokec12  \cf16 \strokec16 else\cf12 \strokec12  \cf15 \strokec15 fib\cf12 \strokec12  \cf13 \strokec13 j\cf12 \strokec12  \cf14 \strokec14 (\cf15 \strokec15 j\cf14 \strokec14 +\cf15 \strokec15 i\cf14 \strokec14 )\cf12 \strokec12  \cf14 \strokec14 (\cf15 \strokec15 k\cf14 \strokec14 +\cf10 \strokec10 1\cf14 \strokec14 )\cf12 \strokec12  \cf15 \strokec15 in\cf12 \strokec12 \
  \cf15 \strokec15 fib\cf12 \strokec12  \cf10 \strokec10 1\cf12 \strokec12  \cf10 \strokec10 1\cf12 \strokec12  \cf10 \strokec10 0\cf12 \strokec12 \
\pard\pardeftab720\sl453\sa160\partightenfactor0

\f4\b\fs33 \cf7 \cb1 \strokec7 Perfect solution (Chris T.)\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=614872818684837#perfect-solution-chris-t"}}{\fldrslt \cf6 \strokec6 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://our.intern.facebook.com/intern/profile/nozomusho"}}{\fldrslt 
\f3\b0\fs24 \cf6 \strokec6 nozomusho}}
\f3\b0\fs24 : this is probably *not* a perfect solution. You'll almost certainly have numerical issues here.\
Most candidates probably don't have a hardcore math background; but those that do may also think of Binet's formula in discrete algebra/number theory which is a closed form formula to compute it in O(log(n)) using the golden ratio:\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f6 \cf18 \cb19 \strokec18 Fn = (O^n - Y^n) / sqrt(5)
\f3 \cf7 \cb1 \strokec7 \
Where\'a0
\f6 \cf18 \cb19 \strokec18 O=(1 + sqrt(5))/2
\f3 \cf7 \cb1 \strokec7 \'a0and\'a0
\f6 \cf18 \cb19 \strokec18 Y = (1 - sqrt(5)) / 2
\f3 \cf7 \cb1 \strokec7 \
\pard\pardeftab720\sl453\sa160\partightenfactor0

\f4\b\fs33 \cf7 Matrix exponentiation for O(lg N) solution\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=614872818684837#matrix-exponentiation-fo"}}{\fldrslt \cf6 \strokec6 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf7 Start with\'a0
\f6 \cf18 \cb19 \strokec18 A[0] = [1, 1]
\f3 \cf7 \cb1 \strokec7 ,\'a0
\f6 \cf18 \cb19 \strokec18 A[1] =[1, 0]
\f3 \cf7 \cb1 \strokec7 , and `F[n , n-1] = F[n-1 , n-2] A.\
\pard\pardeftab720\sl280\partightenfactor0

\f5\fs20 \cf16 \cb11 \strokec16 Use\cf12 \strokec12  \cf15 \strokec15 associativity\cf12 \strokec12  \cf15 \strokec15 of\cf12 \strokec12  \cf15 \strokec15 matrices\cf12 \strokec12  \cf16 \strokec16 and\cf12 \strokec12  \cf15 \strokec15 compute\cf12 \strokec12  \cf20 \strokec20 `A^n`\cf12 \strokec12  \cf15 \strokec15 in\cf12 \strokec12  \cf13 \strokec13 O\cf14 \strokec14 (\cf15 \strokec15 log\cf12 \strokec12  \cf15 \strokec15 n\cf14 \strokec14 )\cf12 \strokec12  \cf15 \strokec15 time\cf12 \strokec12  \cf15 \strokec15 to\cf12 \strokec12  \cf15 \strokec15 get\cf12 \strokec12  \cf20 \strokec20 `Fn`\cf14 \strokec14 .\cf12 \strokec12 \
\pard\pardeftab720\sl540\sa160\partightenfactor0

\f4\b\fs36 \cf7 \cb1 \strokec7 Things to note and look for\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=614872818684837#things-to-note-and-look"}}{\fldrslt \cf6 \strokec6 #}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls2\ilvl0
\f3\b0\fs24 \cf7 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 The candidate may prefer 1-based indexing to 0-based indexing, for the sequence. That's cool. Doesn't change the problem at all.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Candidate should do sanity checking of values with sample inputs.\
}