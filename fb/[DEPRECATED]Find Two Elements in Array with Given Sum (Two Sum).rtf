{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fswiss\fcharset0 Helvetica-Oblique;
\f3\fswiss\fcharset0 Helvetica;\f4\fmodern\fcharset0 Courier;\f5\fswiss\fcharset0 Helvetica-Bold;
\f6\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red245\green30\blue48;\red21\green23\blue25;\red255\green255\blue255;
\red52\green56\blue63;\red78\green84\blue93;\red41\green67\blue135;\red22\green25\blue31;\red38\green38\blue38;
\red228\green230\blue234;\red152\green46\blue3;\red252\green244\blue202;\red0\green0\blue0;\red0\green0\blue82;
\red152\green18\blue15;\red0\green0\blue129;\red6\green50\blue15;\red76\green12\blue1;}
{\*\expandedcolortbl;;\cssrgb\c98039\c21961\c24314;\cssrgb\c10980\c11765\c12941;\cssrgb\c100000\c100000\c100000;
\cssrgb\c26667\c28627\c31373;\cssrgb\c37647\c40392\c43922;\cssrgb\c21176\c34510\c60000;\cssrgb\c11373\c12941\c16078;\cssrgb\c20000\c20000\c20000;
\cssrgb\c91373\c92157\c93333;\cssrgb\c66667\c25098\c0;\cssrgb\c99216\c96078\c83137;\cssrgb\c0\c0\c0;\cssrgb\c0\c3922\c39608;
\cssrgb\c66667\c13333\c6667;\cssrgb\c0\c7059\c58039;\cssrgb\c0\c25098\c7059;\cssrgb\c37647\c7059\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl560\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [DEPRECATED]\cf3 \strokec3 Find Two Elements in Array with Given Sum (Two Sum)\
\pard\pardeftab720\sl520\qc\partightenfactor0

\f1\i\fs24 \cf4 \strokec4 \
\pard\pardeftab720\sl520\qc\partightenfactor0
\cf5 \strokec5 \
\pard\pardeftab720\sl520\qc\partightenfactor0

\f0\i0 \cf5 More Items\
\pard\pardeftab720\sl320\partightenfactor0

\f1\b0 \cf6 \strokec6 Owner:\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/profile/?id=562340329"}}{\fldrslt \cf7 \strokec7 John Kurlak}}\
\pard\pardeftab720\sl280\partightenfactor0

\f2\i \cf8 \strokec8 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\i0 \cf6 \strokec6 Medium\
\pard\pardeftab720\sl280\partightenfactor0

\f2\i \cf8 \strokec8 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\i0 \cf6 \strokec6 Ninja\
\pard\pardeftab720\sl280\partightenfactor0

\f2\i \cf8 \strokec8 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\i0 \cf6 \strokec6 General\
\pard\pardeftab720\sl560\partightenfactor0

\f0\b\fs48 \cf3 \strokec3 Description\
\pard\pardeftab720\sl280\partightenfactor0

\f3\b0\fs24 \cf8 \strokec8 Given an array with\'a0
\f4 \cf9 \cb10 \strokec9 N
\f3 \cf8 \cb1 \strokec8 \'a0elements, find two elements whose values sum to\'a0
\f4 \cf9 \cb10 \strokec9 K
\f3 \cf8 \cb1 \strokec8 .\
\pard\pardeftab720\sl560\partightenfactor0

\f0\b\fs48 \cf3 \strokec3 Question Statement\
\pard\pardeftab720\sl375\sa160\partightenfactor0

\f5\fs30 \cf8 \strokec8 Question\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=1081738401901464#question"}}{\fldrslt \cf7 \strokec7 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf8 Given an array with\'a0
\f4 \cf9 \cb10 \strokec9 N
\f3 \cf8 \cb1 \strokec8 \'a0elements, find two elements whose values sum to\'a0
\f4 \cf9 \cb10 \strokec9 K
\f3 \cf8 \cb1 \strokec8 .\
\pard\pardeftab720\sl375\sa160\partightenfactor0

\f5\b\fs30 \cf8 Overview\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=1081738401901464#overview"}}{\fldrslt \cf7 \strokec7 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf8 Interviewee should come with O(N^2) solution very quickly. It's better to push him or her to come up with a better solution before coding anything.\
\pard\pardeftab720\sl375\sa160\partightenfactor0

\f5\b\fs30 \cf8 O(N^2) Solution\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=1081738401901464#o-n-2-solution"}}{\fldrslt \cf7 \strokec7 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf8 It scans the array twice.\
\pard\pardeftab720\sl280\partightenfactor0

\f6\fs20 \cf11 \cb12 \strokec11 function\cf13 \strokec13  \cf14 \strokec14 has_given_sum\cf15 \strokec15 (\cf11 \strokec11 array\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 ,\cf13 \strokec13  \cf16 \strokec16 $sum\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
  \cf16 \strokec16 $a\cf13 \strokec13  \cf15 \strokec15 =\cf13 \strokec13  \cf17 \strokec17 array_values\cf15 \strokec15 (\cf16 \strokec16 $a\cf15 \strokec15 );\cf13 \strokec13 \
  \cf11 \strokec11 foreach\cf13 \strokec13  \cf15 \strokec15 (\cf16 \strokec16 $a\cf13 \strokec13  \cf11 \strokec11 as\cf13 \strokec13  \cf16 \strokec16 $i\cf13 \strokec13  \cf15 \strokec15 =>\cf13 \strokec13  \cf16 \strokec16 $val\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
    \cf11 \strokec11 for\cf13 \strokec13  \cf15 \strokec15 (\cf16 \strokec16 $j\cf13 \strokec13  \cf15 \strokec15 =\cf13 \strokec13  \cf16 \strokec16 $i\cf13 \strokec13  \cf15 \strokec15 +\cf13 \strokec13  \cf18 \strokec18 1\cf15 \strokec15 ;\cf13 \strokec13  \cf16 \strokec16 $j\cf13 \strokec13  \cf15 \strokec15 <\cf13 \strokec13  \cf17 \strokec17 count\cf15 \strokec15 (\cf16 \strokec16 $a\cf15 \strokec15 );\cf13 \strokec13  \cf16 \strokec16 $j\cf15 \strokec15 ++)\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
      \cf11 \strokec11 if\cf13 \strokec13  \cf15 \strokec15 (\cf16 \strokec16 $val\cf13 \strokec13  \cf15 \strokec15 +\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $j\cf15 \strokec15 ]\cf13 \strokec13  \cf15 \strokec15 ==\cf13 \strokec13  \cf16 \strokec16 $sum\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
        \cf11 \strokec11 return\cf13 \strokec13  \cf11 \strokec11 array\cf15 \strokec15 (\cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $i\cf15 \strokec15 ],\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $j\cf15 \strokec15 ]);\cf13 \strokec13 \
      \cf15 \strokec15 \}\cf13 \strokec13 \
    \cf15 \strokec15 \}\cf13 \strokec13 \
  \cf15 \strokec15 \}\cf13 \strokec13 \
  \cf11 \strokec11 return\cf13 \strokec13  \cf14 \strokec14 null\cf15 \strokec15 ;\cf13 \strokec13 \
\pard\pardeftab720\sl280\partightenfactor0
\cf15 \strokec15 \}\cf13 \strokec13 \
\pard\pardeftab720\sl375\sa160\partightenfactor0

\f5\b\fs30 \cf8 \cb1 \strokec8 O(N lg N) Solution\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=1081738401901464#o-n-lg-n-solution"}}{\fldrslt \cf7 \strokec7 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf8 It sorts the array and then move two pointers from start and end.\
\pard\pardeftab720\sl280\partightenfactor0

\f6\fs20 \cf11 \cb12 \strokec11 function\cf13 \strokec13  \cf14 \strokec14 has_given_sum\cf15 \strokec15 (\cf11 \strokec11 array\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 ,\cf13 \strokec13  \cf16 \strokec16 $sum\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
  \cf17 \strokec17 sort\cf15 \strokec15 (\cf16 \strokec16 $a\cf15 \strokec15 );\cf13 \strokec13 \
  \cf16 \strokec16 $i\cf13 \strokec13  \cf15 \strokec15 =\cf13 \strokec13  \cf18 \strokec18 0\cf15 \strokec15 ;\cf13 \strokec13 \
  \cf16 \strokec16 $j\cf13 \strokec13  \cf15 \strokec15 =\cf13 \strokec13  \cf17 \strokec17 count\cf15 \strokec15 (\cf16 \strokec16 $a\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 -\cf13 \strokec13  \cf18 \strokec18 1\cf15 \strokec15 ;\cf13 \strokec13 \
  \cf11 \strokec11 while\cf13 \strokec13  \cf15 \strokec15 (\cf16 \strokec16 $i\cf13 \strokec13  \cf15 \strokec15 <\cf13 \strokec13  \cf16 \strokec16 $j\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
    \cf16 \strokec16 $total\cf13 \strokec13  \cf15 \strokec15 =\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $i\cf15 \strokec15 ]\cf13 \strokec13  \cf15 \strokec15 +\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $j\cf15 \strokec15 ];\cf13 \strokec13 \
    \cf11 \strokec11 if\cf13 \strokec13  \cf15 \strokec15 (\cf16 \strokec16 $total\cf13 \strokec13  \cf15 \strokec15 >\cf13 \strokec13  \cf16 \strokec16 $sum\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
      \cf16 \strokec16 $j\cf15 \strokec15 --;\cf13 \strokec13 \
    \cf15 \strokec15 \}\cf13 \strokec13  \cf11 \strokec11 else\cf13 \strokec13  \cf11 \strokec11 if\cf13 \strokec13  \cf15 \strokec15 (\cf16 \strokec16 $total\cf13 \strokec13  \cf15 \strokec15 <\cf13 \strokec13  \cf16 \strokec16 $sum\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
      \cf16 \strokec16 $i\cf15 \strokec15 ++;\cf13 \strokec13 \
    \cf15 \strokec15 \}\cf13 \strokec13  \cf11 \strokec11 else\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
      \cf11 \strokec11 return\cf13 \strokec13  \cf11 \strokec11 array\cf15 \strokec15 (\cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $i\cf15 \strokec15 ],\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $j\cf15 \strokec15 ]);\cf13 \strokec13 \
    \cf15 \strokec15 \}\cf13 \strokec13 \
  \cf15 \strokec15 \}\cf13 \strokec13 \
  \cf11 \strokec11 return\cf13 \strokec13  \cf14 \strokec14 null\cf15 \strokec15 ;\cf13 \strokec13 \
\pard\pardeftab720\sl280\partightenfactor0
\cf15 \strokec15 \}\cf13 \strokec13 \
\pard\pardeftab720\sl375\sa160\partightenfactor0

\f5\b\fs30 \cf8 \cb1 \strokec8 O(N) Solution\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=1081738401901464#o-n-solution"}}{\fldrslt \cf7 \strokec7 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf8 It builds a hash table and finds the complement in it.\
\pard\pardeftab720\sl280\partightenfactor0

\f6\fs20 \cf11 \cb12 \strokec11 function\cf13 \strokec13  \cf14 \strokec14 has_given_sum\cf15 \strokec15 (\cf11 \strokec11 array\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 ,\cf13 \strokec13  \cf16 \strokec16 $sum\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
  \cf16 \strokec16 $exist\cf13 \strokec13  \cf15 \strokec15 =\cf13 \strokec13  \cf11 \strokec11 array\cf15 \strokec15 ();\cf13 \strokec13 \
  \cf11 \strokec11 foreach\cf13 \strokec13  \cf15 \strokec15 (\cf16 \strokec16 $a\cf13 \strokec13  \cf11 \strokec11 as\cf13 \strokec13  \cf16 \strokec16 $i\cf13 \strokec13  \cf15 \strokec15 =>\cf13 \strokec13  \cf16 \strokec16 $val\cf15 \strokec15 )\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
    \cf11 \strokec11 if\cf13 \strokec13  \cf15 \strokec15 (\cf17 \strokec17 array_key_exists\cf15 \strokec15 (\cf16 \strokec16 $sum\cf13 \strokec13  \cf15 \strokec15 -\cf13 \strokec13  \cf16 \strokec16 $val\cf15 \strokec15 ,\cf13 \strokec13  \cf16 \strokec16 $exist\cf15 \strokec15 ))\cf13 \strokec13  \cf15 \strokec15 \{\cf13 \strokec13 \
      \cf11 \strokec11 return\cf13 \strokec13  \cf11 \strokec11 array\cf15 \strokec15 (\cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $i\cf15 \strokec15 ],\cf13 \strokec13  \cf16 \strokec16 $a\cf15 \strokec15 [\cf16 \strokec16 $exist\cf15 \strokec15 [\cf16 \strokec16 $sum\cf13 \strokec13  \cf15 \strokec15 -\cf13 \strokec13  \cf16 \strokec16 $val\cf15 \strokec15 ]]);\cf13 \strokec13 \
    \cf15 \strokec15 \}\cf13 \strokec13 \
    \cf16 \strokec16 $exist\cf15 \strokec15 [\cf16 \strokec16 $val\cf15 \strokec15 ]\cf13 \strokec13  \cf15 \strokec15 =\cf13 \strokec13  \cf16 \strokec16 $i\cf15 \strokec15 ;\cf13 \strokec13 \
  \cf15 \strokec15 \}\cf13 \strokec13 \
  \cf11 \strokec11 return\cf13 \strokec13  \cf14 \strokec14 null\cf15 \strokec15 ;\cf13 \strokec13 \
\pard\pardeftab720\sl280\partightenfactor0
\cf15 \strokec15 \}\cf13 \strokec13 \
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\fs24 \cf8 \cb1 \strokec8 With some variants of this solution (building the hashmap before using it), you need to store number of occurrences of the element (or the index of the first occurrence) so that you don't accidentally count\'a0
\f4 \cf9 \cb10 \strokec9 2 * $val == $sum
\f3 \cf8 \cb1 \strokec8 \'a0as a solution.\
\pard\pardeftab720\sl375\sa160\partightenfactor0

\f5\b\fs30 \cf8 Testing\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=1081738401901464#testing"}}{\fldrslt \cf7 \strokec7 #}}\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f3\b0\fs24 \cf8 I ask candidates which inputs will they provide in a unit test of this function. Correct answers include NULL (if language allows it for array), empty array, one element array, duplicate values, negative numbers, positive case, negative case. Most candidates don't come up with a test for very big number (INT_MAX) but I suggest it to them and ask them to fix the function to support them.\
\pard\pardeftab720\sl375\sa160\partightenfactor0

\f5\b\fs30 \cf8 Follow-up\'a0{\field{\*\fldinst{HYPERLINK "https://our.internmc.facebook.com/intern/recruiting/interview/questions/?question_id=1081738401901464#follow-up"}}{\fldrslt \cf7 \strokec7 #}}\
\pard\pardeftab720\sl280\partightenfactor0

\f3\b0\fs24 \cf8 A good follow-up is a function checking if there are three elements with the given sum. The candidate should be able to reuse this code and maybe refactor it a little bit. A good solution for this follow-up is\'a0
\f4 \cf9 \cb10 \strokec9 O(N^2)
\f3 \cf8 \cb1 \strokec8 . Better than\'a0
\f4 \cf9 \cb10 \strokec9 O(N^2)
\f3 \cf8 \cb1 \strokec8 \'a0and the candidate may have advanced the frontiers of computer science or is the author of\'a0{\field{\*\fldinst{HYPERLINK "http://ieeexplore.ieee.org/document/6979047/?reload=true&arnumber=6979047"}}{\fldrslt \cf7 \strokec7 this paper}}. See\'a0{\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/3SUM"}}{\fldrslt \cf7 \strokec7 3SUM}}\'a0for more information.\
}